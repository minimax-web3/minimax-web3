{"extracted_information": "该内容提供了使用 React 连接 Solana 钱包的详细技术指南和代码示例，主要基于 Solana 的 `wallet-adapter` 库。它涵盖了所需的依赖、如何创建 Solana Provider 以及如何将应用包裹在 Provider 中。", "specifications": {}, "pricing": {}, "features": [{"name": "核心库", "description": "Solana 的 `wallet-adapter` 库，简化前端应用中的钱包连接管理。", "details": "https://github.com/anza-xyz/wallet-adapter"}, {"name": "Next.js 模板兼容性", "description": "提供的模板仅兼容 `@solana/web3.js`。", "details": "https://github.com/solana-developers/anchor-web3js-nextjs"}, {"name": "网络配置", "description": "Solana Provider 中可配置网络为 'devnet', 'testnet', 或 'mainnet-beta'，也可提供自定义 RPC 节点。", "parameters": ["WalletAdapterNetwork.Devnet"]}], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": [{"title": "Next.js 模板源代码", "url": "https://github.com/solana-developers/anchor-web3js-nextjs"}, {"title": "Next.js 模板 Vercel 部署", "url": "https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fsolana-developers%2Fanchor-web3js-nextjs&root-directory=frontend&demo-title=Anchor%20Web3.js%20Next.js%20Demo&demo-description=An%20example%20deployment%20of%20the%20Anchor%20Web3.js%20Next.js%20project.&demo-url=https%3A%2F%2Fanchor-web3js-nextjs.vercel.app%2F&project-name=anchor-web3js-nextjs&repository-name=anchor-web3js-nextjs"}, {"title": "Next.js 模板 Vercel 预览", "url": "https://anchor-web3js-nextjs-jade.vercel.app/"}, {"title": "@solana/kit 示例", "url": "https://github.com/anza-xyz/solana-web3.js/tree/main/examples/react-app"}], "code_examples": [{"title": "依赖安装", "language": "Terminal", "code": "npm install @solana/web3.js \\\n@solana/wallet-adapter-base \\\n@solana/wallet-adapter-react \\\n@solana/wallet-adapter-react-ui \\\n@solana/wallet-adapter-wallets"}, {"title": "创建 Solana Provider", "file": "frontend/components/counter/provider/Solana.tsx", "language": "TypeScript/React", "code": "\"use client\";\nimport React, { FC, ReactNode, useMemo } from \"react\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport { WalletModalProvider } from \"@solana/wallet-adapter-react-ui\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport \"@solana/wallet-adapter-react-ui/styles.css\";\n\ninterface SolanaProviderProps {\n    children: ReactNode;\n}\n\nexport const SolanaProvider: FC<SolanaProviderProps> = ({ children }) => {\n    // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'\n    const network = WalletAdapterNetwork.Devnet;\n\n    // You can also provide a custom RPC endpoint\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={[]} autoConnect>\n                <WalletModalProvider>{children}</WalletModalProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n};"}, {"title": "在 RootLayout 中包裹应用", "file": "frontend/app/layout.tsx", "language": "TypeScript/React", "code": "import \"./globals.css\";\nimport \"@solana/wallet-adapter-react-ui/styles.css\";\nimport { SolanaProvider } from \"@/components/counter/provider/Solana\";\n\nexport default function RootLayout({ children }: Readonly<{ children: React.ReactNode; }>) {\n    return (\n        <html>\n            <body>\n                <SolanaProvider>{children}</SolanaProvider>\n            </body>\n        </html>\n    );\n}"}]}